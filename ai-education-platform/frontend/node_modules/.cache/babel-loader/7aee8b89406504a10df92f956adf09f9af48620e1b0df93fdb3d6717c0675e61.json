{"ast":null,"code":"var _jsxFileName = \"/Users/findinfinitelabs/DevApps/vector/ai-education-platform/frontend/src/pages/LearningPathPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LearningPathPage() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    pathId\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Learning paths from provided document\n  const paths = {\n    '1': {\n      title: 'AI Basics',\n      proficiency: 'Beginner',\n      modules: [{\n        id: 1,\n        title: 'What is AI?',\n        activityType: 'quiz',\n        activity: 'Quiz: AI Fundamentals',\n        questions: [{\n          question: 'What does AI stand for?',\n          options: ['Artificial Intelligence', 'Automated Integration', 'Algorithmic Insight', 'Adaptive Interface'],\n          correct: 'Artificial Intelligence'\n        }, {\n          question: 'Which is an AI application?',\n          options: ['Word processing', 'Self-driving cars', 'Email sorting', 'File compression'],\n          correct: 'Self-driving cars'\n        }, {\n          question: 'Machine learning is a subset of AI.',\n          options: ['True', 'False'],\n          correct: 'True'\n        },\n        // Add two more questions to match the 5-question spec\n        {\n          question: 'What is an example of AI in healthcare?',\n          options: ['Spreadsheet analysis', 'Medical imaging diagnosis', 'Text editing', 'File storage'],\n          correct: 'Medical imaging diagnosis'\n        }, {\n          question: 'Deep learning uses neural networks.',\n          options: ['True', 'False'],\n          correct: 'True'\n        }],\n        points: 50,\n        status: 'Unlocked'\n      }, {\n        id: 2,\n        title: 'Types of AI (Narrow vs. General)',\n        activityType: 'prompt',\n        activity: 'Prompt: Identify AI Types',\n        prompt: 'Describe a system that predicts weather patterns. Is it Narrow or General AI?',\n        correctKeywords: ['Narrow'],\n        points: 30,\n        status: 'Locked'\n      }, {\n        id: 3,\n        title: 'AI in Everyday Life',\n        activityType: 'interactive',\n        activity: 'Map AI Applications',\n        scenarios: [{\n          scenario: 'Netflix suggests movies',\n          category: 'Recommendation Systems'\n        }, {\n          scenario: 'Siri answers questions',\n          category: 'Speech Recognition'\n        },\n        // Add 6 more scenarios to match 8 total\n        {\n          scenario: 'Google Maps navigation',\n          category: 'Route Optimization'\n        }, {\n          scenario: 'Spam email filtering',\n          category: 'Classification'\n        }, {\n          scenario: 'Face recognition unlock',\n          category: 'Computer Vision'\n        }, {\n          scenario: 'Amazon product recommendations',\n          category: 'Recommendation Systems'\n        }, {\n          scenario: 'Voice-to-text transcription',\n          category: 'Speech Recognition'\n        }, {\n          scenario: 'Autonomous drone navigation',\n          category: 'Robotics'\n        }],\n        points: 40,\n        status: 'Locked'\n      }]\n    },\n    '2': {\n      title: 'Prompt Analysis and Engineering',\n      proficiency: 'Intermediate',\n      modules: [{\n        id: 1,\n        title: 'Understanding Prompts',\n        activityType: 'quiz',\n        activity: 'Quiz: Prompt Basics',\n        questions: [{\n          question: 'What makes a good prompt?',\n          options: ['Vague terms', 'Specific instructions', 'Long paragraphs', 'Ambiguous goals'],\n          correct: 'Specific instructions'\n        }, {\n          question: 'Which prompt is clearer?',\n          options: ['Tell me about AI', 'Explain supervised learning in 100 words'],\n          correct: 'Explain supervised learning in 100 words'\n        }, {\n          question: 'Context in a prompt improves AI responses.',\n          options: ['True', 'False'],\n          correct: 'True'\n        },\n        // Add two more questions\n        {\n          question: 'What should a prompt include?',\n          options: ['Emojis only', 'Clear constraints', 'Random phrases', 'No structure'],\n          correct: 'Clear constraints'\n        }, {\n          question: 'A good prompt avoids ambiguity.',\n          options: ['True', 'False'],\n          correct: 'True'\n        }],\n        points: 50,\n        status: 'Unlocked'\n      }, {\n        id: 2,\n        title: 'Crafting Effective Prompts',\n        activityType: 'prompt',\n        activity: 'Prompt: Write a Prompt',\n        prompt: 'Write a prompt to generate a Python function that calculates the factorial of a number.',\n        correctKeywords: ['Python', 'function', 'factorial', 'error handling'],\n        points: 40,\n        status: 'Locked'\n      }, {\n        id: 3,\n        title: 'Optimizing Prompts',\n        activityType: 'coding',\n        activity: 'Refine a Prompt',\n        task: 'Refine this vague prompt: \"Make a program\" to be specific.',\n        correctResponse: /JavaScript.*function.*sort.*array/,\n        points: 50,\n        status: 'Locked'\n      }]\n    },\n    '3': {\n      title: 'Data Preparation and AI Data',\n      proficiency: 'Intermediate',\n      modules: [{\n        id: 1,\n        title: 'Introduction to Data Preparation',\n        activityType: 'quiz',\n        activity: 'Quiz: Data Concepts',\n        questions: [{\n          question: 'What is data cleaning?',\n          options: ['Adding noise', 'Removing errors', 'Encrypting data', 'Compressing files'],\n          correct: 'Removing errors'\n        }, {\n          question: 'Why is missing data problematic?',\n          options: ['Slows AI training', 'Causes model bias', 'Both A and B', 'No impact'],\n          correct: 'Both A and B'\n        }, {\n          question: 'Normalization scales data to a standard range.',\n          options: ['True', 'False'],\n          correct: 'True'\n        },\n        // Add two more questions\n        {\n          question: 'What is one-hot encoding used for?',\n          options: ['Scaling numbers', 'Encoding categorical data', 'Compressing data', 'Encrypting data'],\n          correct: 'Encoding categorical data'\n        }, {\n          question: 'Outliers can skew AI model performance.',\n          options: ['True', 'False'],\n          correct: 'True'\n        }],\n        points: 50,\n        status: 'Unlocked'\n      }, {\n        id: 2,\n        title: 'Data Cleaning Techniques',\n        activityType: 'coding',\n        activity: 'Clean a Dataset',\n        task: 'Write Python code to replace null values with the column mean.',\n        correctResponse: /mean.*fillna/,\n        points: 60,\n        status: 'Locked'\n      }, {\n        id: 3,\n        title: 'Data Preprocessing for AI',\n        activityType: 'interactive',\n        activity: 'Preprocess Data',\n        options: ['One-hot encoding', 'Normalization', 'Label encoding', 'Remove duplicates'],\n        correct: ['One-hot encoding', 'Normalization'],\n        points: 40,\n        status: 'Locked'\n      }]\n    },\n    '4': {\n      title: 'Requirements Analysis',\n      proficiency: 'Intermediate',\n      modules: [{\n        id: 1,\n        title: 'Basics of Requirements Analysis',\n        activityType: 'quiz',\n        activity: 'Quiz: Requirements Fundamentals',\n        questions: [{\n          question: 'What is a stakeholder in an AI project?',\n          options: ['Developer', 'End-user', 'Both A and B', 'None'],\n          correct: 'Both A and B'\n        }, {\n          question: 'Why are clear requirements important?',\n          options: ['Reduce costs', 'Ensure alignment', 'Both A and B', 'Aesthetic design'],\n          correct: 'Both A and B'\n        }, {\n          question: 'Requirements should be measurable.',\n          options: ['True', 'False'],\n          correct: 'True'\n        },\n        // Add two more questions\n        {\n          question: 'What is a functional requirement?',\n          options: ['System design', 'User task specification', 'Color scheme', 'Hardware choice'],\n          correct: 'User task specification'\n        }, {\n          question: 'Requirements analysis involves user interviews.',\n          options: ['True', 'False'],\n          correct: 'True'\n        }],\n        points: 50,\n        status: 'Unlocked'\n      }, {\n        id: 2,\n        title: 'Defining AI Requirements',\n        activityType: 'prompt',\n        activity: 'Write Requirements',\n        prompt: 'Write 3 measurable requirements for an AI to predict stock prices.',\n        correctKeywords: ['measurable', 'accuracy', 'data'],\n        points: 40,\n        status: 'Locked'\n      }, {\n        id: 3,\n        title: 'Validating Requirements',\n        activityType: 'interactive',\n        activity: 'Validate Requirements',\n        requirements: [{\n          text: 'AI must be 100% accurate',\n          valid: false\n        }, {\n          text: 'AI processes data in under 1 second',\n          valid: true\n        }],\n        points: 40,\n        status: 'Locked'\n      }]\n    },\n    '5': {\n      title: 'SOP and Regulation Documentation',\n      proficiency: 'Advanced',\n      modules: [{\n        id: 1,\n        title: 'Introduction to SOPs and Regulations',\n        activityType: 'quiz',\n        activity: 'Quiz: Compliance Basics',\n        questions: [{\n          question: 'What is an SOP?',\n          options: ['Software Optimization Plan', 'Standard Operating Procedure', 'System Output Protocol', 'None'],\n          correct: 'Standard Operating Procedure'\n        }, {\n          question: 'Which regulation governs EU data privacy?',\n          options: ['HIPAA', 'GDPR', 'CCPA', 'None'],\n          correct: 'GDPR'\n        }, {\n          question: 'SOPs ensure consistent AI operations.',\n          options: ['True', 'False'],\n          correct: 'True'\n        },\n        // Add two more questions\n        {\n          question: 'What does GDPR stand for?',\n          options: ['General Data Protection Regulation', 'Global Data Privacy Rule', 'General Data Processing Rule', 'None'],\n          correct: 'General Data Protection Regulation'\n        }, {\n          question: 'Compliance documentation is optional for AI systems.',\n          options: ['True', 'False'],\n          correct: 'False'\n        }],\n        points: 50,\n        status: 'Unlocked'\n      }, {\n        id: 2,\n        title: 'Writing SOPs for AI',\n        activityType: 'prompt',\n        activity: 'Draft an SOP',\n        prompt: 'Draft an SOP for validating AI model outputs.',\n        correctKeywords: ['procedure', 'validation', 'steps'],\n        points: 50,\n        status: 'Locked'\n      }, {\n        id: 3,\n        title: 'Regulatory Compliance',\n        activityType: 'interactive',\n        activity: 'Compliance Checklist',\n        options: ['Data anonymization', 'User consent', 'Public data sharing'],\n        correct: ['Data anonymization', 'User consent'],\n        points: 40,\n        status: 'Locked'\n      }]\n    },\n    '6': {\n      title: 'AI Model Deployment',\n      proficiency: 'Advanced',\n      modules: [{\n        id: 1,\n        title: 'Introduction to Model Deployment',\n        activityType: 'quiz',\n        activity: 'Quiz: Deployment Basics',\n        questions: [{\n          question: 'What is model deployment?',\n          options: ['Training a model', 'Making a model accessible for use', 'Data cleaning', 'None'],\n          correct: 'Making a model accessible for use'\n        }, {\n          question: 'What is a common deployment platform?',\n          options: ['Excel', 'AWS SageMaker', 'Word', 'None'],\n          correct: 'AWS SageMaker'\n        }, {\n          question: 'Monitoring is needed post-deployment.',\n          options: ['True', 'False'],\n          correct: 'True'\n        },\n        // Add two more questions\n        {\n          question: 'What is a REST API used for in deployment?',\n          options: ['Data storage', 'Serving predictions', 'Data cleaning', 'None'],\n          correct: 'Serving predictions'\n        }, {\n          question: 'Scalability is a deployment concern.',\n          options: ['True', 'False'],\n          correct: 'True'\n        }],\n        points: 50,\n        status: 'Unlocked'\n      }, {\n        id: 2,\n        title: 'Setting Up a Deployment Pipeline',\n        activityType: 'coding',\n        activity: 'Deploy a Model',\n        task: 'Write a Flask endpoint to serve predictions from a pre-trained linear regression model.',\n        correctResponse: /Flask.*route.*predict/,\n        points: 60,\n        status: 'Locked'\n      }, {\n        id: 3,\n        title: 'Monitoring Deployed Models',\n        activityType: 'interactive',\n        activity: 'Monitor Metrics',\n        options: ['Prediction latency', 'Accuracy', 'Data size'],\n        correct: ['Prediction latency', 'Accuracy'],\n        points: 40,\n        status: 'Locked'\n      }]\n    }\n  };\n  const path = paths[pathId] || {\n    title: 'Unknown Path',\n    modules: []\n  };\n  const [completedModules, setCompletedModules] = useState([]);\n  const [points, setPoints] = useState(0);\n  const [answers, setAnswers] = useState({});\n  if (!user) {\n    navigate('/'); // Redirect to login if not authenticated\n    return null;\n  }\n  const handleQuizAnswer = (moduleId, questionIndex, answer) => {\n    setAnswers({\n      ...answers,\n      [`${moduleId}-${questionIndex}`]: answer\n    });\n  };\n  const handlePromptInput = (moduleId, input) => {\n    setAnswers({\n      ...answers,\n      [moduleId]: input\n    });\n  };\n  const handleCodingInput = (moduleId, input) => {\n    setAnswers({\n      ...answers,\n      [moduleId]: input\n    });\n  };\n  const handleInteractiveAnswer = (moduleId, selectedOptions) => {\n    setAnswers({\n      ...answers,\n      [moduleId]: selectedOptions\n    });\n  };\n  const completeModule = async moduleId => {\n    const module = path.modules.find(m => m.id === moduleId);\n    if (!completedModules.includes(moduleId)) {\n      let isCorrect = true;\n      if (module.activityType === 'quiz') {\n        isCorrect = module.questions.every((q, index) => answers[`${moduleId}-${index}`] === q.correct);\n      } else if (module.activityType === 'prompt') {\n        isCorrect = module.correctKeywords.every(keyword => {\n          var _answers$moduleId;\n          return (_answers$moduleId = answers[moduleId]) === null || _answers$moduleId === void 0 ? void 0 : _answers$moduleId.toLowerCase().includes(keyword.toLowerCase());\n        });\n      } else if (module.activityType === 'coding') {\n        isCorrect = module.correctResponse.test(answers[moduleId] || '');\n      } else if (module.activityType === 'interactive') {\n        var _answers$moduleId2, _module$correct;\n        isCorrect = JSON.stringify((_answers$moduleId2 = answers[moduleId]) === null || _answers$moduleId2 === void 0 ? void 0 : _answers$moduleId2.sort()) === JSON.stringify((_module$correct = module.correct) === null || _module$correct === void 0 ? void 0 : _module$correct.sort());\n      }\n      if (isCorrect) {\n        setCompletedModules([...completedModules, moduleId]);\n        setPoints(points + module.points);\n        // TODO: Send progress to backend\n      } else {\n        alert('Incorrect answers. Please try again.');\n      }\n    }\n  };\n  const renderActivity = module => {\n    var _path$modules;\n    const isUnlocked = module.status === 'Unlocked' || completedModules.includes((_path$modules = path.modules[path.modules.findIndex(m => m.id === module.id) - 1]) === null || _path$modules === void 0 ? void 0 : _path$modules.id);\n    if (!isUnlocked) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"Locked - Complete previous module\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 14\n      }, this);\n    }\n    if (completedModules.includes(module.id)) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-accent font-semibold\",\n        children: \"Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 14\n      }, this);\n    }\n    if (module.activityType === 'quiz') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-md font-medium mb-2\",\n          children: module.activity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), module.questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium\",\n            children: q.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), q.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `q${module.id}-${index}`,\n              value: option,\n              onChange: () => handleQuizAnswer(module.id, index, option),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this), option]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => completeModule(module.id),\n          className: \"bg-primary text-white px-4 py-2 rounded-md hover:bg-opacity-90 transition duration-200\",\n          children: \"Submit Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this);\n    } else if (module.activityType === 'prompt') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-md font-medium mb-2\",\n          children: module.activity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mb-2\",\n          children: module.prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 border border-gray-300 rounded-md\",\n          placeholder: \"Write your response here...\",\n          onChange: e => handlePromptInput(module.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => completeModule(module.id),\n          className: \"mt-2 bg-primary text-white px-4 py-2 rounded-md hover:bg-opacity-90 transition duration-200\",\n          children: \"Submit Prompt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this);\n    } else if (module.activityType === 'coding') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-md font-medium mb-2\",\n          children: module.activity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mb-2\",\n          children: module.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 border border-gray-300 rounded-md font-mono\",\n          placeholder: \"Write your code here...\",\n          rows: \"6\",\n          onChange: e => handleCodingInput(module.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => completeModule(module.id),\n          className: \"mt-2 bg-primary text-white px-4 py-2 rounded-md hover:bg-opacity-90 transition duration-200\",\n          children: \"Submit Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this);\n    } else if (module.activityType === 'interactive') {\n      var _module$scenarios;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-md font-medium mb-2\",\n          children: module.activity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mb-2\",\n          children: \"Select the correct categories for each scenario:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), (_module$scenarios = module.scenarios) === null || _module$scenarios === void 0 ? void 0 : _module$scenarios.map((scenario, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: scenario.scenario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => handleInteractiveAnswer(module.id, {\n              ...answers[module.id],\n              [index]: e.target.value\n            }),\n            className: \"p-2 border border-gray-300 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), ['Recommendation Systems', 'Speech Recognition', 'Route Optimization', 'Classification', 'Computer Vision', 'Robotics'].map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => completeModule(module.id),\n          className: \"mt-2 bg-primary text-white px-4 py-2 rounded-md hover:bg-opacity-90 transition duration-200\",\n          children: \"Submit Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Activity not implemented\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-6\",\n        children: path.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg mb-4\",\n        children: [\"Points Earned: \", points]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: path.modules.map(module => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-md font-medium mb-2\",\n            children: module.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mb-4\",\n            children: [\"Activity: \", module.activity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this), renderActivity(module)]\n        }, module.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 566,\n    columnNumber: 5\n  }, this);\n}\n_s(LearningPathPage, \"KeWmqLj/v9B3MPIm1ExsujiV4k0=\", false, function () {\n  return [useAuth, useParams, useNavigate];\n});\n_c = LearningPathPage;\nexport default LearningPathPage;\nvar _c;\n$RefreshReg$(_c, \"LearningPathPage\");","map":{"version":3,"names":["React","useState","useAuth","useNavigate","useParams","Navbar","jsxDEV","_jsxDEV","LearningPathPage","_s","user","pathId","navigate","paths","title","proficiency","modules","id","activityType","activity","questions","question","options","correct","points","status","prompt","correctKeywords","scenarios","scenario","category","task","correctResponse","requirements","text","valid","path","completedModules","setCompletedModules","setPoints","answers","setAnswers","handleQuizAnswer","moduleId","questionIndex","answer","handlePromptInput","input","handleCodingInput","handleInteractiveAnswer","selectedOptions","completeModule","module","find","m","includes","isCorrect","every","q","index","keyword","_answers$moduleId","toLowerCase","test","_answers$moduleId2","_module$correct","JSON","stringify","sort","alert","renderActivity","_path$modules","isUnlocked","findIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","i","type","name","value","onChange","onClick","placeholder","e","target","rows","_module$scenarios","cat","_c","$RefreshReg$"],"sources":["/Users/findinfinitelabs/DevApps/vector/ai-education-platform/frontend/src/pages/LearningPathPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\n\nfunction LearningPathPage() {\n  const { user } = useAuth();\n  const { pathId } = useParams();\n  const navigate = useNavigate();\n\n  // Learning paths from provided document\n  const paths = {\n    '1': {\n      title: 'AI Basics',\n      proficiency: 'Beginner',\n      modules: [\n        {\n          id: 1,\n          title: 'What is AI?',\n          activityType: 'quiz',\n          activity: 'Quiz: AI Fundamentals',\n          questions: [\n            {\n              question: 'What does AI stand for?',\n              options: ['Artificial Intelligence', 'Automated Integration', 'Algorithmic Insight', 'Adaptive Interface'],\n              correct: 'Artificial Intelligence',\n            },\n            {\n              question: 'Which is an AI application?',\n              options: ['Word processing', 'Self-driving cars', 'Email sorting', 'File compression'],\n              correct: 'Self-driving cars',\n            },\n            {\n              question: 'Machine learning is a subset of AI.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n            // Add two more questions to match the 5-question spec\n            {\n              question: 'What is an example of AI in healthcare?',\n              options: ['Spreadsheet analysis', 'Medical imaging diagnosis', 'Text editing', 'File storage'],\n              correct: 'Medical imaging diagnosis',\n            },\n            {\n              question: 'Deep learning uses neural networks.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n          ],\n          points: 50,\n          status: 'Unlocked',\n        },\n        {\n          id: 2,\n          title: 'Types of AI (Narrow vs. General)',\n          activityType: 'prompt',\n          activity: 'Prompt: Identify AI Types',\n          prompt: 'Describe a system that predicts weather patterns. Is it Narrow or General AI?',\n          correctKeywords: ['Narrow'],\n          points: 30,\n          status: 'Locked',\n        },\n        {\n          id: 3,\n          title: 'AI in Everyday Life',\n          activityType: 'interactive',\n          activity: 'Map AI Applications',\n          scenarios: [\n            { scenario: 'Netflix suggests movies', category: 'Recommendation Systems' },\n            { scenario: 'Siri answers questions', category: 'Speech Recognition' },\n            // Add 6 more scenarios to match 8 total\n            { scenario: 'Google Maps navigation', category: 'Route Optimization' },\n            { scenario: 'Spam email filtering', category: 'Classification' },\n            { scenario: 'Face recognition unlock', category: 'Computer Vision' },\n            { scenario: 'Amazon product recommendations', category: 'Recommendation Systems' },\n            { scenario: 'Voice-to-text transcription', category: 'Speech Recognition' },\n            { scenario: 'Autonomous drone navigation', category: 'Robotics' },\n          ],\n          points: 40,\n          status: 'Locked',\n        },\n      ],\n    },\n    '2': {\n      title: 'Prompt Analysis and Engineering',\n      proficiency: 'Intermediate',\n      modules: [\n        {\n          id: 1,\n          title: 'Understanding Prompts',\n          activityType: 'quiz',\n          activity: 'Quiz: Prompt Basics',\n          questions: [\n            {\n              question: 'What makes a good prompt?',\n              options: ['Vague terms', 'Specific instructions', 'Long paragraphs', 'Ambiguous goals'],\n              correct: 'Specific instructions',\n            },\n            {\n              question: 'Which prompt is clearer?',\n              options: ['Tell me about AI', 'Explain supervised learning in 100 words'],\n              correct: 'Explain supervised learning in 100 words',\n            },\n            {\n              question: 'Context in a prompt improves AI responses.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n            // Add two more questions\n            {\n              question: 'What should a prompt include?',\n              options: ['Emojis only', 'Clear constraints', 'Random phrases', 'No structure'],\n              correct: 'Clear constraints',\n            },\n            {\n              question: 'A good prompt avoids ambiguity.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n          ],\n          points: 50,\n          status: 'Unlocked',\n        },\n        {\n          id: 2,\n          title: 'Crafting Effective Prompts',\n          activityType: 'prompt',\n          activity: 'Prompt: Write a Prompt',\n          prompt: 'Write a prompt to generate a Python function that calculates the factorial of a number.',\n          correctKeywords: ['Python', 'function', 'factorial', 'error handling'],\n          points: 40,\n          status: 'Locked',\n        },\n        {\n          id: 3,\n          title: 'Optimizing Prompts',\n          activityType: 'coding',\n          activity: 'Refine a Prompt',\n          task: 'Refine this vague prompt: \"Make a program\" to be specific.',\n          correctResponse: /JavaScript.*function.*sort.*array/,\n          points: 50,\n          status: 'Locked',\n        },\n      ],\n    },\n    '3': {\n      title: 'Data Preparation and AI Data',\n      proficiency: 'Intermediate',\n      modules: [\n        {\n          id: 1,\n          title: 'Introduction to Data Preparation',\n          activityType: 'quiz',\n          activity: 'Quiz: Data Concepts',\n          questions: [\n            {\n              question: 'What is data cleaning?',\n              options: ['Adding noise', 'Removing errors', 'Encrypting data', 'Compressing files'],\n              correct: 'Removing errors',\n            },\n            {\n              question: 'Why is missing data problematic?',\n              options: ['Slows AI training', 'Causes model bias', 'Both A and B', 'No impact'],\n              correct: 'Both A and B',\n            },\n            {\n              question: 'Normalization scales data to a standard range.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n            // Add two more questions\n            {\n              question: 'What is one-hot encoding used for?',\n              options: ['Scaling numbers', 'Encoding categorical data', 'Compressing data', 'Encrypting data'],\n              correct: 'Encoding categorical data',\n            },\n            {\n              question: 'Outliers can skew AI model performance.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n          ],\n          points: 50,\n          status: 'Unlocked',\n        },\n        {\n          id: 2,\n          title: 'Data Cleaning Techniques',\n          activityType: 'coding',\n          activity: 'Clean a Dataset',\n          task: 'Write Python code to replace null values with the column mean.',\n          correctResponse: /mean.*fillna/,\n          points: 60,\n          status: 'Locked',\n        },\n        {\n          id: 3,\n          title: 'Data Preprocessing for AI',\n          activityType: 'interactive',\n          activity: 'Preprocess Data',\n          options: ['One-hot encoding', 'Normalization', 'Label encoding', 'Remove duplicates'],\n          correct: ['One-hot encoding', 'Normalization'],\n          points: 40,\n          status: 'Locked',\n        },\n      ],\n    },\n    '4': {\n      title: 'Requirements Analysis',\n      proficiency: 'Intermediate',\n      modules: [\n        {\n          id: 1,\n          title: 'Basics of Requirements Analysis',\n          activityType: 'quiz',\n          activity: 'Quiz: Requirements Fundamentals',\n          questions: [\n            {\n              question: 'What is a stakeholder in an AI project?',\n              options: ['Developer', 'End-user', 'Both A and B', 'None'],\n              correct: 'Both A and B',\n            },\n            {\n              question: 'Why are clear requirements important?',\n              options: ['Reduce costs', 'Ensure alignment', 'Both A and B', 'Aesthetic design'],\n              correct: 'Both A and B',\n            },\n            {\n              question: 'Requirements should be measurable.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n            // Add two more questions\n            {\n              question: 'What is a functional requirement?',\n              options: ['System design', 'User task specification', 'Color scheme', 'Hardware choice'],\n              correct: 'User task specification',\n            },\n            {\n              question: 'Requirements analysis involves user interviews.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n          ],\n          points: 50,\n          status: 'Unlocked',\n        },\n        {\n          id: 2,\n          title: 'Defining AI Requirements',\n          activityType: 'prompt',\n          activity: 'Write Requirements',\n          prompt: 'Write 3 measurable requirements for an AI to predict stock prices.',\n          correctKeywords: ['measurable', 'accuracy', 'data'],\n          points: 40,\n          status: 'Locked',\n        },\n        {\n          id: 3,\n          title: 'Validating Requirements',\n          activityType: 'interactive',\n          activity: 'Validate Requirements',\n          requirements: [\n            { text: 'AI must be 100% accurate', valid: false },\n            { text: 'AI processes data in under 1 second', valid: true },\n          ],\n          points: 40,\n          status: 'Locked',\n        },\n      ],\n    },\n    '5': {\n      title: 'SOP and Regulation Documentation',\n      proficiency: 'Advanced',\n      modules: [\n        {\n          id: 1,\n          title: 'Introduction to SOPs and Regulations',\n          activityType: 'quiz',\n          activity: 'Quiz: Compliance Basics',\n          questions: [\n            {\n              question: 'What is an SOP?',\n              options: ['Software Optimization Plan', 'Standard Operating Procedure', 'System Output Protocol', 'None'],\n              correct: 'Standard Operating Procedure',\n            },\n            {\n              question: 'Which regulation governs EU data privacy?',\n              options: ['HIPAA', 'GDPR', 'CCPA', 'None'],\n              correct: 'GDPR',\n            },\n            {\n              question: 'SOPs ensure consistent AI operations.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n            // Add two more questions\n            {\n              question: 'What does GDPR stand for?',\n              options: ['General Data Protection Regulation', 'Global Data Privacy Rule', 'General Data Processing Rule', 'None'],\n              correct: 'General Data Protection Regulation',\n            },\n            {\n              question: 'Compliance documentation is optional for AI systems.',\n              options: ['True', 'False'],\n              correct: 'False',\n            },\n          ],\n          points: 50,\n          status: 'Unlocked',\n        },\n        {\n          id: 2,\n          title: 'Writing SOPs for AI',\n          activityType: 'prompt',\n          activity: 'Draft an SOP',\n          prompt: 'Draft an SOP for validating AI model outputs.',\n          correctKeywords: ['procedure', 'validation', 'steps'],\n          points: 50,\n          status: 'Locked',\n        },\n        {\n          id: 3,\n          title: 'Regulatory Compliance',\n          activityType: 'interactive',\n          activity: 'Compliance Checklist',\n          options: ['Data anonymization', 'User consent', 'Public data sharing'],\n          correct: ['Data anonymization', 'User consent'],\n          points: 40,\n          status: 'Locked',\n        },\n      ],\n    },\n    '6': {\n      title: 'AI Model Deployment',\n      proficiency: 'Advanced',\n      modules: [\n        {\n          id: 1,\n          title: 'Introduction to Model Deployment',\n          activityType: 'quiz',\n          activity: 'Quiz: Deployment Basics',\n          questions: [\n            {\n              question: 'What is model deployment?',\n              options: ['Training a model', 'Making a model accessible for use', 'Data cleaning', 'None'],\n              correct: 'Making a model accessible for use',\n            },\n            {\n              question: 'What is a common deployment platform?',\n              options: ['Excel', 'AWS SageMaker', 'Word', 'None'],\n              correct: 'AWS SageMaker',\n            },\n            {\n              question: 'Monitoring is needed post-deployment.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n            // Add two more questions\n            {\n              question: 'What is a REST API used for in deployment?',\n              options: ['Data storage', 'Serving predictions', 'Data cleaning', 'None'],\n              correct: 'Serving predictions',\n            },\n            {\n              question: 'Scalability is a deployment concern.',\n              options: ['True', 'False'],\n              correct: 'True',\n            },\n          ],\n          points: 50,\n          status: 'Unlocked',\n        },\n        {\n          id: 2,\n          title: 'Setting Up a Deployment Pipeline',\n          activityType: 'coding',\n          activity: 'Deploy a Model',\n          task: 'Write a Flask endpoint to serve predictions from a pre-trained linear regression model.',\n          correctResponse: /Flask.*route.*predict/,\n          points: 60,\n          status: 'Locked',\n        },\n        {\n          id: 3,\n          title: 'Monitoring Deployed Models',\n          activityType: 'interactive',\n          activity: 'Monitor Metrics',\n          options: ['Prediction latency', 'Accuracy', 'Data size'],\n          correct: ['Prediction latency', 'Accuracy'],\n          points: 40,\n          status: 'Locked',\n        },\n      ],\n    },\n  };\n\n  const path = paths[pathId] || { title: 'Unknown Path', modules: [] };\n\n  const [completedModules, setCompletedModules] = useState([]);\n  const [points, setPoints] = useState(0);\n  const [answers, setAnswers] = useState({});\n\n  if (!user) {\n    navigate('/'); // Redirect to login if not authenticated\n    return null;\n  }\n\n  const handleQuizAnswer = (moduleId, questionIndex, answer) => {\n    setAnswers({ ...answers, [`${moduleId}-${questionIndex}`]: answer });\n  };\n\n  const handlePromptInput = (moduleId, input) => {\n    setAnswers({ ...answers, [moduleId]: input });\n  };\n\n  const handleCodingInput = (moduleId, input) => {\n    setAnswers({ ...answers, [moduleId]: input });\n  };\n\n  const handleInteractiveAnswer = (moduleId, selectedOptions) => {\n    setAnswers({ ...answers, [moduleId]: selectedOptions });\n  };\n\n  const completeModule = async (moduleId) => {\n    const module = path.modules.find((m) => m.id === moduleId);\n    if (!completedModules.includes(moduleId)) {\n      let isCorrect = true;\n\n      if (module.activityType === 'quiz') {\n        isCorrect = module.questions.every((q, index) => answers[`${moduleId}-${index}`] === q.correct);\n      } else if (module.activityType === 'prompt') {\n        isCorrect = module.correctKeywords.every((keyword) =>\n          answers[moduleId]?.toLowerCase().includes(keyword.toLowerCase())\n        );\n      } else if (module.activityType === 'coding') {\n        isCorrect = module.correctResponse.test(answers[moduleId] || '');\n      } else if (module.activityType === 'interactive') {\n        isCorrect = JSON.stringify(answers[moduleId]?.sort()) === JSON.stringify(module.correct?.sort());\n      }\n\n      if (isCorrect) {\n        setCompletedModules([...completedModules, moduleId]);\n        setPoints(points + module.points);\n        // TODO: Send progress to backend\n      } else {\n        alert('Incorrect answers. Please try again.');\n      }\n    }\n  };\n\n  const renderActivity = (module) => {\n    const isUnlocked = module.status === 'Unlocked' || completedModules.includes(path.modules[path.modules.findIndex((m) => m.id === module.id) - 1]?.id);\n\n    if (!isUnlocked) {\n      return <p className=\"text-gray-500\">Locked - Complete previous module</p>;\n    }\n\n    if (completedModules.includes(module.id)) {\n      return <p className=\"text-accent font-semibold\">Completed!</p>;\n    }\n\n    if (module.activityType === 'quiz') {\n      return (\n        <div>\n          <h3 className=\"text-md font-medium mb-2\">{module.activity}</h3>\n          {module.questions.map((q, index) => (\n            <div key={index} className=\"mb-4\">\n              <p className=\"font-medium\">{q.question}</p>\n              {q.options.map((option, i) => (\n                <label key={i} className=\"block\">\n                  <input\n                    type=\"radio\"\n                    name={`q${module.id}-${index}`}\n                    value={option}\n                    onChange={() => handleQuizAnswer(module.id, index, option)}\n                    className=\"mr-2\"\n                  />\n                  {option}\n                </label>\n              ))}\n            </div>\n          ))}\n          <button\n            onClick={() => completeModule(module.id)}\n            className=\"bg-primary text-white px-4 py-2 rounded-md hover:bg-opacity-90 transition duration-200\"\n          >\n            Submit Quiz\n          </button>\n        </div>\n      );\n    } else if (module.activityType === 'prompt') {\n      return (\n        <div>\n          <h3 className=\"text-md font-medium mb-2\">{module.activity}</h3>\n          <p className=\"text-sm text-gray-600 mb-2\">{module.prompt}</p>\n          <textarea\n            className=\"w-full p-2 border border-gray-300 rounded-md\"\n            placeholder=\"Write your response here...\"\n            onChange={(e) => handlePromptInput(module.id, e.target.value)}\n          />\n          <button\n            onClick={() => completeModule(module.id)}\n            className=\"mt-2 bg-primary text-white px-4 py-2 rounded-md hover:bg-opacity-90 transition duration-200\"\n          >\n            Submit Prompt\n          </button>\n        </div>\n      );\n    } else if (module.activityType === 'coding') {\n      return (\n        <div>\n          <h3 className=\"text-md font-medium mb-2\">{module.activity}</h3>\n          <p className=\"text-sm text-gray-600 mb-2\">{module.task}</p>\n          <textarea\n            className=\"w-full p-2 border border-gray-300 rounded-md font-mono\"\n            placeholder=\"Write your code here...\"\n            rows=\"6\"\n            onChange={(e) => handleCodingInput(module.id, e.target.value)}\n          />\n          <button\n            onClick={() => completeModule(module.id)}\n            className=\"mt-2 bg-primary text-white px-4 py-2 rounded-md hover:bg-opacity-90 transition duration-200\"\n          >\n            Submit Code\n          </button>\n        </div>\n      );\n    } else if (module.activityType === 'interactive') {\n      return (\n        <div>\n          <h3 className=\"text-md font-medium mb-2\">{module.activity}</h3>\n          <p className=\"text-sm text-gray-600 mb-2\">Select the correct categories for each scenario:</p>\n          {module.scenarios?.map((scenario, index) => (\n            <div key={index} className=\"mb-2\">\n              <p>{scenario.scenario}</p>\n              <select\n                onChange={(e) =>\n                  handleInteractiveAnswer(module.id, {\n                    ...answers[module.id],\n                    [index]: e.target.value,\n                  })\n                }\n                className=\"p-2 border border-gray-300 rounded-md\"\n              >\n                <option value=\"\">Select category</option>\n                {['Recommendation Systems', 'Speech Recognition', 'Route Optimization', 'Classification', 'Computer Vision', 'Robotics'].map((cat) => (\n                  <option key={cat} value={cat}>{cat}</option>\n                ))}\n              </select>\n            </div>\n          ))}\n          <button\n            onClick={() => completeModule(module.id)}\n            className=\"mt-2 bg-primary text-white px-4 py-2 rounded-md hover:bg-opacity-90 transition duration-200\"\n          >\n            Submit Answers\n          </button>\n        </div>\n      );\n    }\n    return <p>Activity not implemented</p>;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <Navbar />\n      <div className=\"container mx-auto p-6\">\n        <h1 className=\"text-2xl font-bold mb-6\">{path.title}</h1>\n        <p className=\"text-lg mb-4\">Points Earned: {points}</p>\n        <div className=\"space-y-6\">\n          {path.modules.map((module) => (\n            <div key={module.id} className=\"bg-white p-4 rounded-lg shadow-md\">\n              <h2 className=\"text-md font-medium mb-2\">{module.title}</h2>\n              <p className=\"text-sm text-gray-600 mb-4\">Activity: {module.activity}</p>\n              {renderActivity(module)}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LearningPathPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}